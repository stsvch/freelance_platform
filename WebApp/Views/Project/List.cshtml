@model IEnumerable<ProjectModel>
@using Microsoft.AspNetCore.Http;
@{
    var userId = Context.Session.GetString("UserId");
    var role = ViewData["Role"] as string;
}

<div class="container mt-4">
    <div>
        <input type="text" id="tagInput" placeholder="слова, через запятую" />
        <button type="button" id="addTagButton">Добавить</button>

        <form id="tagsForm" asp-action="Find" asp-controller="Project" method="post">
            <input type="hidden" id="tagsHiddenInput" name="tags" />
            <div id="tagsContainer"></div>
            <button type="submit" class="btn btn-primary">Отправить теги</button>
        </form>
    </div>

    <h2 class="mb-4">Доступные проекты</h2>
    @if (Model != null && Model.Any())
    {
        <div class="list-group">
            @foreach (var project in Model)
            {
                <div class="list-group-item mb-4">
                    <div class="d-flex justify-content-between">
                        <h5 class="mb-1">@project.Title</h5>
                        <button class="btn btn-link" type="button" onclick="toggleProjectDetails(@project.Id)">
                            Подробнее
                        </button>
                    </div>

                    <div id="projectDetails-@project.Id" style="display:none;" class="project-details mt-3">
                        <p class="mb-2"><strong>Описание:</strong> @project.Description</p>
                        <p class="mb-2"><strong>Бюджет:</strong> @project.Budget руб.</p>
                        <p class="mb-2"><strong>Создано:</strong> @project.CreatedAt?.ToString("dd.MM.yyyy")</p>
                        <p class="mb-2"><strong>Обновлено:</strong> @project.UpdatedAt?.ToString("dd.MM.yyyy")</p>
                        <form asp-action="Create" asp-controller="Response" method="get" class="mt-2">
                            <input type="hidden" name="projectId" value="@project.Id" />
                            <button type="submit" class="btn btn-primary">Откликнуться</button>
                        </form>
                    </div>
                </div>
            }

        </div>
    }
    else
    {
        <div class="alert alert-warning">
            Нет проектов.
        </div>
    }
</div>

<script>
    function toggleProjectDetails(projectId) {
        const details = document.getElementById(`projectDetails-${projectId}`);
        if (!details) {
            console.error(`Элемент с ID projectDetails-${projectId} не найден`);
            return;
        }
        details.style.display = (details.style.display === 'none' || details.style.display === '') ? 'block' : 'none';
    }
    document.addEventListener("DOMContentLoaded", function () {
        const tagsArray = [];

        function addTag() {
            const input = document.getElementById("tagInput");
            const tagsContainer = document.getElementById("tagsContainer");

            const tagText = input.value.trim();
            if (tagText === "") {
                console.log("Пустой тег, ничего не добавляем");
                return;
            }

            if (tagsArray.includes(tagText)) {
                console.log("Тег уже существует:", tagText);
                return;
            }

            tagsArray.push(tagText);
            console.log("Текущий массив тегов:", tagsArray);

            const tag = document.createElement("div");
            tag.classList.add("tag");

            const tagLabel = document.createElement("span");
            tagLabel.innerText = tagText;
            tag.appendChild(tagLabel);

            const closeButton = document.createElement("button");
            closeButton.innerText = "x";
            closeButton.classList.add("close-btn");
            closeButton.onclick = function () {
                tagsArray.splice(tagsArray.indexOf(tagText), 1);
                tag.remove();
                console.log("Тег удален:", tagText);
            };
            tag.appendChild(closeButton);

            tagsContainer.appendChild(tag);

            input.value = "";
        }

        const addButton = document.getElementById("addTagButton");
        if (addButton) {
            addButton.addEventListener("click", addTag);
        } else {
            console.error("Кнопка не найдена!");
        }

        document.getElementById("tagsForm").onsubmit = function (e) {
            e.preventDefault();
            const tagsInput = document.getElementById("tagsHiddenInput");
            tagsInput.value = JSON.stringify(tagsArray);
            console.log("Отправка формы с тегами:", JSON.stringify(tagsArray));
            this.submit();
        };

    });
</script>

<style>
    #tagsContainer {
        display: flex;
        flex-wrap: wrap;
        gap: 5px;
        margin-top: 10px;
    }

    .tag {
        display: flex;
        align-items: center;
        padding: 5px 10px;
        background-color: #e0e0e0;
        border-radius: 20px;
        font-size: 14px;
    }

    .close-btn {
        background: none;
        border: none;
        color: #ff0000;
        font-size: 16px;
        margin-left: 8px;
        cursor: pointer;
    }
</style>


